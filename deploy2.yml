name: Deploy to Amazon Linux EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # 프로젝트 디렉토리로 이동 (없으면 생성)
          mkdir -p /home/ec2-user/fast-music-server
          cd /home/ec2-user/fast-music-server
          
          # 기존 코드 백업 (있으면)
          if [ -d ".git" ]; then
            git stash
            git pull origin main
          else
            # 처음 배포하는 경우 저장소 클론
            git clone https://github.com/${{ github.repository }} .
          fi
          
          # 미니콘다 설치 (없으면)
          if [ ! -d "/home/ec2-user/miniconda3" ]; then
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            bash miniconda.sh -b -p /home/ec2-user/miniconda3
            rm miniconda.sh
          fi
          
          # conda 환경 생성 및 패키지 설치
          source /home/ec2-user/miniconda3/etc/profile.d/conda.sh
          conda env remove -n fast-music-server -y || true
          conda create -n fast-music-server python=3.10 -y
          conda activate fast-music-server
          pip install -r requirements.txt
          
          # systemd 서비스 파일 복사
          sudo cp deploy/fast-music-server.service /etc/systemd/system/
          sudo systemctl daemon-reload
          
          # 서비스 시작 및 활성화
          sudo systemctl enable fast-music-server
          sudo systemctl restart fast-music-server
          
          # 서비스 상태 확인
          sudo systemctl status fast-music-server
          
          echo "배포가 완료되었습니다!" 
